{"version":3,"sources":["components/About.tsx","components/Introduction.tsx","pages/Main.tsx","components/modules/SemesterCard.tsx","components/modules/Semester.tsx","pages/Modules.tsx","components/Header.tsx","utils/UserConstants.ts","components/contact/SocialButton.tsx","components/contact/Contact.tsx","components/misc/MiscCard.tsx","pages/Misc.tsx","components/common/BlogPost.tsx","routes/MiscRouter.tsx","utils/MiscConstants.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["About","className","id","Card","Header","Body","src","alt","Introduction","props","title","subtitle","Jumbotron","Container","Main","SemesterCard","module","border","type","isGradeFree","isSUable","Button","variant","href","link","Semester","semesterInformation","academicYear","year","semester","modules","map","Modules","semesters","console","log","useState","isOpen","setOpen","closeDropdown","Navbar","bg","expand","expanded","fixed","Nav","Link","style","color","Toggle","onClick","aria-controls","Collapse","SocialLinks","buttonColor","icon","faGithub","faLinkedin","faTelegram","faEnvelope","SocialButton","socialLink","background","target","Contact","MiscCard","Misc","miscPostsInfo","info","BlogPost","baseURL","location","content","setContent","useEffect","fetch","then","res","text","children","remarkPlugins","remarkGfm","MiscRouter","path","exact","component","process","MISC_JSON_DATA_REPO","MODULES_JSON_DATA_REPO","App","semesterInfo","data","setData","a","json","pages","miscPostsResp","modulesResp","fetchData","basename","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8c16247.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nfunction About() {\n  return (\n    <div className=\"About\" id=\"about\">\n      <Card className=\"about-container\">\n        <Card.Header className=\"text-center\">About Me</Card.Header>\n        <Card.Body className=\"container-content\">\n          <Card className=\"content-card\">\n            <Card.Body className=\"text-center content-body\">\n              <img\n                className=\"content-img\"\n                src=\"images/seanlowjk.jpg\"\n                alt=\"profilepic\"\n              ></img>\n              I am a Year 3 Computer Science Student at the National University\n              of Singapore.\n              <br />I believe in life-long learning and teaching.\n            </Card.Body>\n          </Card>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Container, Jumbotron } from \"react-bootstrap\";\n\ntype IntroductionProps = {\n  title: string;\n  subtitle: string;\n};\n\nfunction Introduction(props: IntroductionProps) {\n  const { title, subtitle } = props;\n\n  return (\n    <div className=\"Introduction\" id=\"home\">\n      <Jumbotron className=\"main-hero\">\n        <Container className=\"main-container\">\n          <h1 className=\"container-header\">{title}</h1>\n          <h4 className=\"container-description\"> {subtitle} </h4>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Introduction;\n","import React from \"react\";\n\nimport About from \"../components/About\";\nimport Introduction from \"../components/Introduction\";\n\nfunction Main() {\n  return (\n    <div>\n      <Introduction title={\"Sean Low\"} subtitle={\"Welcome to my Blog! \"} />\n      <About />\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { ModuleItem } from \"../../utils/ModuleTypes\";\n\ntype SemesterCardProps = {\n  module: ModuleItem;\n};\n\nfunction SemesterCard(props: SemesterCardProps) {\n  const { module } = props;\n\n  return (\n    <>\n      <Card border=\"dark\" className=\"semester-card\">\n        <Card.Body>\n          <h5>{module.title}</h5>\n          <h6>{module.type}</h6>\n          {module.isGradeFree && <h6> CS / CU</h6>}\n          {module.isSUable && <h6>S/U Option Available</h6>}\n          {!module.isSUable && !module.isGradeFree && (\n            <h6>S/U Option Not Available</h6>\n          )}\n          <Button variant=\"dark\" href={`/blog/#${module.link}`}>\n            Link\n          </Button>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default SemesterCard;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport SemesterCard from \"./SemesterCard\";\nimport { SemesterItem } from \"../../utils/ModuleTypes\";\n\ntype SemesterProps = {\n  semesterInformation: SemesterItem;\n};\n\nfunction Semester(props: SemesterProps) {\n  const { semesterInformation } = props;\n\n  return (\n    <div className=\"Semester\">\n      <Card className=\"semester-container\">\n        <Card.Header className=\"text-center\">\n          {`${semesterInformation.academicYear} : Year ${semesterInformation.year} Semester ${semesterInformation.semester}`}\n        </Card.Header>\n        <Card.Body className=\"semester-cards\">\n          {semesterInformation.modules.map((module) => (\n            <SemesterCard module={module} />\n          ))}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Semester;\n","import React from \"react\";\nimport Semester from \"../components/modules/Semester\";\nimport Introduction from \"../components/Introduction\";\nimport { SemesterItem } from \"../utils/ModuleTypes\";\n\ntype Props = {\n  semesters: SemesterItem[];\n}\n\nfunction Modules(props: Props) {\n  const { semesters } = props;\n\n  console.log(semesters);\n\n  return (\n    <div>\n      <Introduction\n        title={\"NUS Modules\"}\n        subtitle={\"Scroll Down to view my module reviews! \"}\n      />\n      {semesters.map((semester) => (\n        <Semester semesterInformation={semester} />\n      ))}\n    </div>\n  );\n}\n\nexport default Modules;\n","import React, { useState } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nfunction Header() {\n  const [isOpen, setOpen] = useState<boolean>(false);\n\n  const closeDropdown = () => setOpen(false);\n  const openDropdown = () => setOpen(true);\n\n  return (\n    <>\n      <Navbar\n        variant=\"light\"\n        bg=\"light\"\n        expand=\"lg\"\n        expanded={isOpen}\n        fixed=\"top\"\n      >\n        <Nav.Link style={{ color: \"black\" }} href=\"/blog/#/\">\n          Sean Low\n        </Nav.Link>\n        <Navbar.Toggle\n          onClick={openDropdown}\n          aria-controls=\"basic-navbar-nav\"\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/blog/#/\" onClick={closeDropdown}>\n              Home\n            </Nav.Link>\n            <Nav.Link href=\"/blog/#/modules/\" onClick={closeDropdown}>\n              Modules\n            </Nav.Link>\n            <Nav.Link href=\"/blog/#/misc/\" onClick={closeDropdown}>\n              Misc\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\n\nexport default Header;\n","import { SocialLink } from \"./UserTypes\";\nimport {\n  faGithub,\n  faLinkedin,\n  faTelegram,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const SocialLinks: SocialLink[] = [\n  {\n    buttonColor: \"#545454\",\n    icon: faGithub,\n    link: \"https://github.com/seanlowjk\",\n  },\n  {\n    buttonColor: \"#0e76a8\",\n    icon: faLinkedin,\n    link: \"https://linkedin.com/in/seanlowjk\",\n  },\n  {\n    buttonColor: \"#0088CC\",\n    icon: faTelegram,\n    link: \"https://t.me/seanlowjk\",\n  },\n  {\n    buttonColor: \"#0072c6\",\n    icon: faEnvelope,\n    link: \"mailto:sean.low.jk@u.nus.edu\",\n  },\n];\n","import React from \"react\";\n\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SocialLink } from \"../../utils/UserTypes\";\n\ntype SocialButtonProps = {\n  socialLink: SocialLink;\n};\n\nfunction SocialButton(props: SocialButtonProps) {\n  const { socialLink } = props;\n\n  return (\n    <>\n      <Button\n        variant=\"outline-light social-card\"\n        style={{\n          background: socialLink.buttonColor,\n        }}\n        href={socialLink.link}\n        target=\"_blank\"\n      >\n        <FontAwesomeIcon icon={socialLink.icon} />\n      </Button>\n    </>\n  );\n}\n\nexport default SocialButton;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { SocialLinks } from \"../../utils/UserConstants\";\nimport SocialButton from \"./SocialButton\";\n\nfunction Contact() {\n  return (\n    <div>\n      <Card className=\"Contact\">\n        <Card.Header>Contact Me</Card.Header>\n        <Card.Body className=\"contact-body\">\n          <div className=\"social-cards\">\n            {SocialLinks.map((socialLink) => (\n              <SocialButton socialLink={socialLink} />\n            ))}\n          </div>\n          <div>(c) Low Jun Kai, Sean 2020</div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\ntype MiscCardProps = {\n  title: string;\n  subtitle: string;\n  href: string;\n};\n\nfunction MiscCard(props: MiscCardProps) {\n  const { title, subtitle, href } = props;\n\n  return (\n    <>\n      <Card border=\"dark\" className=\"misc-card\">\n        <Card.Body>\n          <h5> {title}</h5>\n          <p> {subtitle}</p>\n          <Button variant=\"dark\" href={`/blog/#${href}`}>\n            Link\n          </Button>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default MiscCard;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport MiscCard from \"../components/misc/MiscCard\";\nimport Introduction from \"../components/Introduction\";\nimport { MiscPost} from \"../utils/MiscConstants\";\n\ntype MiscRouterProps = {\n  miscPostsInfo: MiscPost[];\n}\n\nfunction Misc(props: MiscRouterProps) {\n  return (\n    <div className=\"Misc\">\n      <Introduction\n        title={\"Other Posts\"}\n        subtitle={\"Sharing Knowledge is Great! :D\"}\n      />\n      <div>\n        <Card className=\"misc-container\">\n          <Card.Body className=\"misc-cards\">\n            {props.miscPostsInfo.map((info) => (\n              <MiscCard\n                title={info.title}\n                subtitle={info.subtitle}\n                href={info.href}\n              />\n            ))}\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Misc;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Container } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from 'remark-gfm';\n\ntype BlogPostProps = {\n  baseURL: string; \n  location: string; \n};\n\nfunction BlogPost(props: BlogPostProps) {\n  const { baseURL, location } = props;\n  const [content, setContent] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(`${baseURL}${location}`)\n      .then(res => res.text())\n      .then(res => setContent(res || \"\"))\n  })\n\n  return (\n    <div className=\"Blog\">\n      <Container className=\"blog-container\">\n        <Card className=\"blog-content\">\n          <ReactMarkdown children={content} remarkPlugins={[remarkGfm]} />\n          <Button variant=\"dark\" href=\"/blog/#/misc/\">\n            Back To Posts\n          </Button>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n\nexport default BlogPost;\n","import React from \"react\";\nimport { Route } from \"react-router\";\nimport BlogPost from \"../components/common/BlogPost\";\nimport { MiscPost } from \"../utils/MiscConstants\";\n\ntype MiscRouterProps = {\n  miscPostsInfo: MiscPost[];\n}\n\nfunction MiscRouter(props: MiscRouterProps) {\n  return (\n    <>\n    {props.miscPostsInfo.map((info) => (\n      <Route\n        path={info.href}\n        exact={true}\n        component={() => \n          <BlogPost baseURL={process.env.REACT_APP_DATA_REPO || \"\"} location={info.location} />\n        }\n      />\n    ))}\n    </>\n  )\n}\n\nexport default MiscRouter;\n","export type MiscPost = {\n  title: string, \n  subtitle: string, \n  href: string, \n  location: string\n};\n\nexport const MISC_JSON_DATA_REPO = `${process.env.REACT_APP_DATA_REPO}/misc/pages.json`\nexport const MODULES_JSON_DATA_REPO = `${process.env.REACT_APP_DATA_REPO}/modules/pages.json`\n","import React, { useEffect, useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Main from \"./pages/Main\";\nimport Modules from \"./pages/Modules\";\nimport Header from \"./components/Header\";\nimport Contact from \"./components/contact/Contact\";\nimport Misc from \"./pages/Misc\";\nimport MiscRouter from \"./routes/MiscRouter\";\nimport { MiscPost, MISC_JSON_DATA_REPO, MODULES_JSON_DATA_REPO } from \"./utils/MiscConstants\";\nimport { SemesterItem } from \"./utils/ModuleTypes\";\nimport BlogPost from \"./components/common/BlogPost\";\n\ntype PropsData = {\n  miscPostsInfo: MiscPost[], \n  semesterInfo: SemesterItem[]\n};\n\nfunction App() {\n  const [data, setData] = useState<PropsData>({\n    miscPostsInfo: [], \n    semesterInfo: []\n  });\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const miscPostsResp = await fetch(MISC_JSON_DATA_REPO)\n        .then(res => res.json())\n        .then(res => res.pages || []);\n\n      const modulesResp = await fetch(MODULES_JSON_DATA_REPO)\n        .then(res => res.json())\n        .then(res => res.pages);\n\n      setData({ miscPostsInfo: miscPostsResp, semesterInfo: modulesResp });\n    }\n\n    fetchData();\n  }, [])\n\n\n  return (\n    <div>\n      {\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact={true} render={Main} />\n            <Route path=\"/modules\" exact={true}>\n              <Modules semesters={data.semesterInfo} />\n            </Route>\n            <Route path=\"/misc\" exact={true}>\n              <Misc miscPostsInfo={data.miscPostsInfo} />\n            </Route>\n\n            {data.semesterInfo.map((semester) =>\n              semester.modules\n                .map((module) => (\n                  <Route\n                    path={module.link}\n                    component={() => (\n                      <BlogPost\n                        baseURL={process.env.REACT_APP_DATA_REPO || \"\"}\n                        location={module.content}\n                      />\n                    )}\n                  />\n                ))\n            )}\n\n            <MiscRouter miscPostsInfo={data.miscPostsInfo} />\n          </Switch>\n        </HashRouter>\n      }\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}